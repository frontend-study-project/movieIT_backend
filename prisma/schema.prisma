generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  userId     String      @unique
  nickname   String      @unique
  password   String
  movieLisks MovieLike[]
  theaterLisks TheaterLike[]
  Booking    Booking[]

  @@index([userId])
}

model MovieLike {
  userId  Int
  movieId Int
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  like    Boolean

  @@unique([userId, movieId])
}

model TheaterLike {
  userId  Int
  theaterId Int
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  like    Boolean

  @@unique([userId, theaterId])
}

model Theater {
  id     Int      @id @default(autoincrement())
  name   String
  screen Screen[]
}

model Screen {
  id        Int       @id @default(autoincrement())
  name String
  lat String
  lng String
  loc String
  theaterId Int
  theater   Theater   @relation(fields: [theaterId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Booking   Booking[]
}

model Booking {
  id           String   @id
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId       Int
  movieId      Int
  theaterId    Int
  screen       Screen   @relation(fields: [theaterId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  auditorium   String
  people       Int
  date         String
  seat         String
  money        Int
  reserve_date DateTime @default(now())
}